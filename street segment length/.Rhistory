dev.off()
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
library(car)
summary(Mroz)
summary(Mroz)
summary(Mroz)
mroz.mod <- glm(lfp ~ k5 + k618 + age + wc + hc +lwg + inc, family = binomial,
data = Mroz)
str(Mroz)
View(Mroz)
mroz.mod <- glm(lfp ~ k5 + k618 + age + wc + hc +lwg + inc, family =
binomial(link = logit), data = Mroz)
S(mroz.mod)
summary(mroz.mod)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
##################################################
brief(Cowles)
View(Cowles)
sum(Cowles$volunteer == "yes") #number yes
str(Cowles)
cowles.mod <- glm(volunteer ~ sex + neuroticism * extraversion, data = Cowles,
family = binomial)
brief(cowles.mod, pvalues = TRUE)
##########################################
library(effects)
plot(predictorEffects(mroz.mod))
mroz.mod <- glm(lfp ~ k5 + k618 + age + wc + hc +lwg + inc, family =
binomial(link = logit), data = Mroz)
plot(predictorEffects(mroz.mod))
plot(predictorEffects(cowles.mod))
plot(predictorEffects(cowles.mod ~ neuroticism + extraversion,
xlevels = list(neuroticism = seq(0, 24, by = 8),
extraversion = seq(0, 24, by = 8))),
lines = list(multiline = TRUE))
plot(predictorEffects(cowles.mod, ~ neuroticism + extraversion,
xlevels = list(neuroticism = seq(0, 24, by = 8),
extraversion = seq(0, 24, by = 8))),
lines = list(multiline = TRUE))
mroz.mod.2 <- update(mroz.mod, . ~ . - k5 -k618)
?update
?anova
anova(mroz.mod.2, mroz.mod, test = "Chisq")
brief(cowles.mod.0 <- update(cowles.mod, . ~ . -neuroticism:extraversion))
anova(cowles.mod.0, cowles.mod, test = "Chisq")
Anova(mroz.mod)
Anova(cowles.mod)
head(predict(mroz.mod))
head(predict(mroz.mod, type = "response"))
predict.data <- data.frame(sex = c("female", "male"),
neuroticism = rep(12, 2), extraversion = rep(12, 2))
predict.data
predict.data$p.volunteer
predict.data$p.volunteer <- predict(cowles.mod, newdata = predict.data, type = "response")
predict.data
?anova
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
??multinom
library(nnet)
?anova.multinom
?anova.multinom
?anova.mlm
?anova.multinom
?pchisq
?anova
?predict
?qnorm
qnorm(c(0.5975,0.5762))
pnorm(c(0.5975,0.5762))
plot(1:6, rep(1/6,6), lwd=2, ty="h", xlab="x", ylab="p(x)", main="DICE")
?distribution
plot(0:10, dpois(0:10, 2), lwd=2, ty="h", xlab="x", ylab="p(x)", main="DICE")
plot(0:10, dpois(0:10, 2), lwd=2, ty="h", xlab="x", ylab="p(x)", main="Poisson(2)")
?distributions
plot(0:10, dbinom(0:10, size=10, prob=0.2), lwd=2, ty="h", xlab="x", ylab="p(x)",
main="Binom(10, 0.2)")
plot(0:10, dbinom(0:10, size=10, prob=0.2), lwd=2, xlab="x", ylab="p(x)",
main="Binom(10, 0.2)")
source("C:/Users/andre/Documents/Data Science/Master in Data Science/Second Year/First Semester/Subjects/Advanced Statistical Modelling/Bayesian Modelling/R Examples/First example.R")
plot(0:50, dbinom(0:50, size=50, prob=0.2), lwd=2, ty="h", xlab="x", ylab="p(x)",
main="Binom(50, 0.2)")
?distributions
plot(dnorm(mean = 0, sd = 1))
plot(0:10, dnorm(0:10, mean = 0, sd = 1))
plot(-10:10, dnorm(-10:10, mean = 0, sd = 1))
plot(-10:10, dnorm(-10:10, mean = 0, sd = 1), lwd=2, ty="h", xlab="x", ylab="p(x)",
main="Normal(0, 1)")
version
plot(-10:10, dnorm(-10:10, mean = 0, sd = 1), lwd=2, ty="line", xlab="x", ylab="p(x)",
main="Normal(0, 1)")
plot(function(x)dnorm(x, 0, 1), xlim=c(-5,5), ylab="f(x)")
plot(function(x)dnorm(x, 0, 1), xlim=c(-5,5), ylab="f(x)", main = "Normal(0, 1)")
plot(function(x)dnorm(x, 0, 1), xlim=c(-5,5), ylab="f(x)")
plot(function(x)dnorm(x, 0, 1), xlim=c(-5,5), ylab="f(x)")
plot(function(x)dnorm(x, 0, 2), xlim=c(-5,5), ylab="f(x)", main = "Normal(0, 1)", add=T)
plot(function(x)dnorm(x, 0, 1), xlim=c(-5,5), ylab="f(x)")
plot(function(x)dnorm(x, 0, 2), xlim=c(-5,5), ylab="f(x)", main = "Normal(0, 1)", add=T, lty=2)
legend("topright")
legend("topright", c("Normal(0, 1)", "Normal(0, 2)"), lty=c(1, 2))
pnorm(0.9) - pnorm(0.6)
pnorm(9, mean = 5, sd = 3) - pnorm(6, mean = 5, sd = 3)
plot(rnorm(10000, mean = 5, sd = 3))
x <- rnorm(n, mean = 5, sd = 3)
n <- 100000
x <- rnorm(n, mean = 5, sd = 3)
x
sum((x>6 & x<9))
num/n
num <- sum((x>6 & x<9))
num/n
n <- 100
x <- rnorm(n, mean = 5, sd = 3)
num <- sum((x>6 & x<9))
num/n
?distributions
?sample
coin_toss <- c(0, 1)
C <- sample(coin_toss, 100000, replace = TRUE, prob = 0.5)
coin_toss <- c(0, 1)
C <- sample(coin_toss, 100000, replace = TRUE, prob = c(0.5, 0.5)
C
C
coin_toss <- c(0, 1)
C <- sample(coin_toss, 100000, replace = TRUE, prob = c(0.5, 0.5))
C
blue_die = 1:6
B <- sample(blue_die, n, replace = TRUE, prob = c(1/6, 1/6, 1/6, 1/6, 1/6, 1/6))
B
n = 100000
blue_die = 1:6
B <- sample(blue_die, n, replace = TRUE, prob = c(1/6, 1/6, 1/6, 1/6, 1/6, 1/6))
B
red_die = 1:6
R <- sample(red_die, n, replace = TRUE, prob = c(2/3, 1/3, 2/3, 1/3, 2/3, 1/3))
Z = C*(B+R)
plot(Z)
Z
plot(Z, lwd=2, ty="h", xlab="x", ylab="p(x)", main="Z")
plot(0:10, Z, lwd=2, ty="h", xlab="x", ylab="p(x)", main="Z")
hist(Z)
sum(Z>1) / n
R.Version()
## Random variable C
n = 100000
coin_toss <- c(0, 1)
C <- sample(coin_toss, n, replace = TRUE, prob = c(0.5, 0.5))
# Random variable B
blue_die = 1:6
B <- sample(blue_die, n, replace = TRUE, prob = c(1/6, 1/6, 1/6, 1/6, 1/6, 1/6))
# Random variable R
red_die = 1:6
R <- sample(red_die, n, replace = TRUE, prob = c(2/9, 1/9, 2/9, 1/9, 2/9, 1/9))
# Random variable Z
Z = C*(B+R)
# a) Histogram of Z
hist(Z)
# b) Prob Z > 1
sum(Z>1) / n
R.version.string
install.packages("installr")
library(installr)
updateR()
R.version.string
R.version.string
R.version.string
library(tinytex)
tinytex::install_tinytex()
ws <- sample_smallworld(1, 100, 4, 0.5)
library(igraph)
ws <- sample_smallworld(1, 100, 4, 0.5)
ws
rm(list = ls())
while (!is.null(dev.list())) dev.off()
?lm
help(aircraft)
library(sm)
help(aircraft)
setwd("C:/Users/andre/Documents/Data Science/Master in Data Science/Second Year/First Semester/Subjects/Complex and Social Networks/Research Project/csn__research_project-1/street segment length")
load("C:/Users/andre/Documents/Data Science/Master in Data Science/Second Year/First Semester/Subjects/Complex and Social Networks/Research Project/csn__research_project-1/street segment length/.RData")
combined_model_summary
minus_log_likelihood_model_4(alpha = 5.776, beta = 0.01149)
minus_log_likelihood_model_6(alpha = 10.73, beta = 0.003003, gamma = 0.9781)
minus_log_likelihood_model_3(alpha = 28.02, gamma = 1.927  )
2*minus_log_likelihood_model_3(alpha = 28.02, gamma = 1.927  )
2*minus_log_likelihood_model_6(alpha = 10.73, beta = 0.003003, gamma = 0.9781)
